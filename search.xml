<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>LinearA-Note</title>
      <link href="/2024/11/30/LinearA-Note/"/>
      <url>/2024/11/30/LinearA-Note/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> maths </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JP2001-Young, Poor and Busy</title>
      <link href="/2023/12/31/JP2001-Young-Poor-and-Busy/"/>
      <url>/2023/12/31/JP2001-Young-Poor-and-Busy/</url>
      
        <content type="html"><![CDATA[<p>今年下半年确实有点摸，之前本来想记录一下自己第一次训练模型的经历的，但是因为某些原因一直拖延，现在已经忘记了很多细节了。马上就要到新的一年了，还是想着记录点什么，这道题是套磁的时候给我的题目，网上也查不到题解，就想着正好写一篇博客。</p><h4 id="题面："><a href="#题面：" class="headerlink" title="题面："></a>题面：</h4><blockquote><p>Time Limit: 1000MSMemory Limit: 30000K</p></blockquote><blockquote><p>Description</p><p>Ken and Keiko are young, poor and busy. Short explanation: they are students, and ridden with part-time jobs. To make things worse, Ken lives in Hakodate and Keiko in Tokyo. They want to meet, but since they have neither time nor money, they have to go back to their respective jobs immediately after, and must be careful about transportation costs. Help them find the most economical meeting point.<br>Ken starts from Hakodate, Keiko from Tokyo. They know schedules and fares for all trains, and can choose to meet anywhere including their hometowns, but they cannot leave before 8am and must be back by 6pm in their respective towns. Train changes take no time (one can leave the same minute he&#x2F;she arrives), but they want to meet for at least 30 minutes in the same city.</p><p>There can be up to 100 cities and 2000 direct connections, so you should devise an algorithm clever enough for the task.</p></blockquote><blockquote><p>Input</p><p>The input is a sequence of data sets.</p><p>The first line of a data set contains a single integer, the number of connections in the timetable. It is not greater than 2000.</p><p>Connections are given one on a line, in the following format.</p><p>Start_city HH:MM Arrival_city HH:MM price</p><p>Start_city and Arrival_city are composed of up to 16 alphabetical characters, with only the first one in upper case. Departure and arrival times are given in hours and minutes (two digits each, separated by “:”) from 00:00 to 23:59. Arrival time is strictly after departure time. The price for one connection is an integer between 1 and 10000, inclusive. Fields are separated by spaces.</p><p>The end of the input is marked by a line containing a zero.</p><p>Output</p><p>The output should contain one integer for each data set, the lowest cost possible. This is the total fare of all connections they use.</p><p>If there is no solution to a data set, you should output a zero.</p><p>The solution to each data set should be given in a separate line.</p></blockquote><blockquote><p>Sample Input</p><p>5<br>Hakodate 08:15 Morioka 12:30 2500<br>Morioka 14:05 Hakodate 17:30 2500<br>Morioka 15:30 Hakodate 18:00 3000<br>Morioka 14:30 Tokyo 17:50 3000<br>Tokyo 08:30 Morioka 13:35 3000<br>4<br>Hakodate 08:15 Morioka 12:30 2500<br>Morioka 14:04 Hakodate 17:30 2500<br>Morioka 14:30 Tokyo 17:50 3000<br>Tokyo 08:30 Morioka 13:35 3000<br>18<br>Hakodate 09:55 Akita 10:53 3840<br>Hakodate 14:14 Akita 16:09 1920<br>Hakodate 18:36 Akita 19:33 3840<br>Hakodate 08:00 Morioka 08:53 3550<br>Hakodate 22:40 Morioka 23:34 3550<br>Akita 14:23 Tokyo 14:53 2010<br>Akita 20:36 Tokyo 21:06 2010<br>Akita 08:20 Hakodate 09:18 3840<br>Akita 13:56 Hakodate 14:54 3840<br>Akita 21:37 Hakodate 22:35 3840<br>Morioka 09:51 Tokyo 10:31 2660<br>Morioka 14:49 Tokyo 15:29 2660<br>Morioka 19:42 Tokyo 20:22 2660<br>Morioka 15:11 Hakodate 16:04 3550<br>Morioka 23:03 Hakodate 23:56 3550<br>Tokyo 09:44 Morioka 11:04 1330<br>Tokyo 21:54 Morioka 22:34 2660<br>Tokyo 11:34 Akita 12:04 2010<br>0</p></blockquote><blockquote><p>Sample Output</p><p>11000<br>0<br>11090</p></blockquote><h4 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h4><p>这道题目的实质是一个带约束的TSP,在出发时间和到家时间以及会面时间的约束条件下保证总花费最少。<br>用CPP的话时间限制还是比较宽松的，所以考虑使用了动态规划。首先建立一个图，节点是城市，边是铁路，权值是车票价格。初始化最小费用为无穷大， 状态转移方程为：$最小费用 &#x3D; min(最小费用, 总费用)$<br>之后考虑维护两个数组，分别存储到达东京&#x2F;函馆和从东京&#x2F;函馆出发的费用。之后每个城市都计算总花费，找到最小的那个就行了。<br>输入输出注意处理时间以及注意总费用有两个值需要t+30即可。</p><h4 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;map&gt;</span><br><span class="line">#include &lt;climits&gt;</span><br><span class="line">#include &lt;cstdlib&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;utility&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;queue&gt; </span><br><span class="line"></span><br><span class="line">#define INFTY (INT_MAX / 8)</span><br><span class="line">#define HAKODATE 0</span><br><span class="line">#define TOKYO 1</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">// Structure to represent a train schedule</span><br><span class="line">struct train_t &#123;</span><br><span class="line">  int s_city, a_city; // Departure and arrival cities</span><br><span class="line">  int s_time, a_time; // Departure and arrival times</span><br><span class="line">  int price;          // Ticket price</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// Structure to represent a node in the search</span><br><span class="line">struct Node &#123;</span><br><span class="line">  int city, time, cost;</span><br><span class="line"></span><br><span class="line">  Node(int c, int t, int co) : city(c), time(t), cost(co) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  // Operator overloading for priority queue comparison</span><br><span class="line">  bool operator&gt;(const Node&amp; other) const &#123;</span><br><span class="line">    return cost &gt; other.cost;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// Comparison functions for sorting train schedules</span><br><span class="line">bool start_cmp(const train_t &amp;x, const train_t &amp;y) &#123; return x.s_time &lt; y.s_time; &#125;</span><br><span class="line">bool arrival_cmp(const train_t &amp;x, const train_t &amp;y) &#123; return y.a_time &lt; x.a_time; &#125;</span><br><span class="line"></span><br><span class="line">int n;</span><br><span class="line">train_t tr[2048];</span><br><span class="line"></span><br><span class="line">// Arrays to store cost information for different cities and times</span><br><span class="line">int cost_from_tokyo[101][601];</span><br><span class="line">int cost_from_hakodate[101][601];</span><br><span class="line">int cost_for_tokyo[101][601];</span><br><span class="line">int cost_for_hakodate[101][601];</span><br><span class="line"></span><br><span class="line">// Function to transform time from HH:MM format to minutes</span><br><span class="line">int transform_time(string s) &#123;</span><br><span class="line">  int result = ((s[0] - &#x27;0&#x27;) * 10 + (s[1] - &#x27;0&#x27;)) * 60 + ((s[3] - &#x27;0&#x27;) * 10 + (s[4] - &#x27;0&#x27;)) - (60 * 8);</span><br><span class="line">  if (result &lt; 0 || result &gt; 600) &#123;</span><br><span class="line">    return -1;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Function to input train schedule data</span><br><span class="line">int input() &#123;</span><br><span class="line">  int price, new_n;</span><br><span class="line">  string start_city, s_start_time, arrive_city, s_arrive_time;</span><br><span class="line">  map&lt;string, int&gt; city_dic; // Map to store city names and corresponding indices</span><br><span class="line">  int start_time, arrive_time;</span><br><span class="line"></span><br><span class="line">  city_dic.clear();</span><br><span class="line">  city_dic[&quot;Hakodate&quot;] = HAKODATE;</span><br><span class="line">  city_dic[&quot;Tokyo&quot;] = TOKYO;</span><br><span class="line"></span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  if (n == 0) &#123;</span><br><span class="line">    return 0;</span><br><span class="line">  &#125;</span><br><span class="line">  new_n = 0;</span><br><span class="line">  for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">    cin &gt;&gt; start_city &gt;&gt; s_start_time &gt;&gt; arrive_city &gt;&gt; s_arrive_time &gt;&gt; price;</span><br><span class="line">    if (!city_dic.count(start_city)) &#123;</span><br><span class="line">      city_dic[start_city] = city_dic.size();</span><br><span class="line">    &#125;</span><br><span class="line">    if (!city_dic.count(arrive_city)) &#123;</span><br><span class="line">      city_dic[arrive_city] = city_dic.size();</span><br><span class="line">    &#125;</span><br><span class="line">    if ((start_time = transform_time(s_start_time)) &lt; 0 || (arrive_time = transform_time(s_arrive_time)) &lt; 0) &#123;</span><br><span class="line">      continue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tr[new_n].s_city = city_dic[start_city];</span><br><span class="line">    tr[new_n].a_city = city_dic[arrive_city];</span><br><span class="line">    tr[new_n].s_time = start_time;</span><br><span class="line">    tr[new_n].a_time = arrive_time;</span><br><span class="line">    tr[new_n].price = price;</span><br><span class="line">    new_n++;</span><br><span class="line">  &#125;</span><br><span class="line">  n = new_n;</span><br><span class="line"></span><br><span class="line">  return 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Function to initialize cost tables</span><br><span class="line">void init_table() &#123;</span><br><span class="line">  for (int i = 0; i &lt; 101; i++) &#123;</span><br><span class="line">    for (int j = 0; j &lt; 601; j++) &#123;</span><br><span class="line">      cost_from_tokyo[i][j] = cost_from_hakodate[i][j] = cost_for_tokyo[i][j] = cost_for_hakodate[i][j] = INFTY;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Function to calculate costs for different paths</span><br><span class="line">void calc() &#123;</span><br><span class="line">  int i;</span><br><span class="line">  init_table();</span><br><span class="line"></span><br><span class="line">  i = 0;</span><br><span class="line">  cost_from_tokyo[TOKYO][0] = cost_from_hakodate[HAKODATE][0] = 0;</span><br><span class="line">  sort(tr, tr + n, start_cmp);</span><br><span class="line">  for (int t = 0; t &lt; 600; t++) &#123;</span><br><span class="line">    for (int c = 0; c &lt; 100; c++) &#123;</span><br><span class="line">      cost_from_tokyo[c][t + 1] = min(cost_from_tokyo[c][t + 1], cost_from_tokyo[c][t]);</span><br><span class="line">      cost_from_hakodate[c][t + 1] = min(cost_from_hakodate[c][t + 1], cost_from_hakodate[c][t]);</span><br><span class="line">    &#125;</span><br><span class="line">    while (i &lt; n &amp;&amp; tr[i].s_time == t) &#123;</span><br><span class="line">      cost_from_tokyo[tr[i].a_city][tr[i].a_time] =</span><br><span class="line">          min(cost_from_tokyo[tr[i].a_city][tr[i].a_time], cost_from_tokyo[tr[i].s_city][tr[i].s_time] + tr[i].price);</span><br><span class="line">      cost_from_hakodate[tr[i].a_city][tr[i].a_time] =</span><br><span class="line">          min(cost_from_hakodate[tr[i].a_city][tr[i].a_time], cost_from_hakodate[tr[i].s_city][tr[i].s_time] + tr[i].price);</span><br><span class="line">      i++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  i = 0;</span><br><span class="line">  cost_for_tokyo[TOKYO][600] = cost_for_hakodate[HAKODATE][600] = 0;</span><br><span class="line">  sort(tr, tr + n, arrival_cmp);</span><br><span class="line">  for (int t = 600; t &gt; 0; t--) &#123;</span><br><span class="line">    for (int c = 0; c &lt; 100; c++) &#123;</span><br><span class="line">      cost_for_tokyo[c][t - 1] = min(cost_for_tokyo[c][t - 1], cost_for_tokyo[c][t]);</span><br><span class="line">      cost_for_hakodate[c][t - 1] = min(cost_for_hakodate[c][t - 1], cost_for_hakodate[c][t]);</span><br><span class="line">    &#125;</span><br><span class="line">    while (i &lt; n &amp;&amp; tr[i].a_time == t) &#123;</span><br><span class="line">      cost_for_tokyo[tr[i].s_city][tr[i].s_time] =</span><br><span class="line">          min(cost_for_tokyo[tr[i].s_city][tr[i].s_time], cost_for_tokyo[tr[i].a_city][tr[i].a_time] + tr[i].price);</span><br><span class="line">      cost_for_hakodate[tr[i].s_city][tr[i].s_time] =</span><br><span class="line">          min(cost_for_hakodate[tr[i].s_city][tr[i].s_time], cost_for_hakodate[tr[i].a_city][tr[i].a_time] + tr[i].price);</span><br><span class="line">      i++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Function to search for the minimum cost</span><br><span class="line">int search() &#123;</span><br><span class="line">  int best = INFTY;</span><br><span class="line">  for (int t = 0; t &lt;= (600 - 30); t++) &#123;</span><br><span class="line">    for (int c = 0; c &lt; 100; c++) &#123;</span><br><span class="line">      int sum = cost_from_tokyo[c][t] + cost_from_hakodate[c][t] + cost_for_tokyo[c][t + 30] + cost_for_hakodate[c][t + 30];</span><br><span class="line">      best = min(best, sum);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return best == INFTY ? 0 : best;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Main function</span><br><span class="line">int main() &#123;</span><br><span class="line">  while (input()) &#123;</span><br><span class="line">    calc();</span><br><span class="line">    cout &lt;&lt; search() &lt;&lt; endl;</span><br><span class="line">  &#125;</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="python打oj"><a href="#python打oj" class="headerlink" title="python打oj"></a>python打oj</h4><p>因为套磁的是nlp方向的教授，所以被要求使用python做一遍。因为上面的代码过CPP就用了0.03秒，所以直接改成python提交试了试，然后RE了。<br>于是考虑优化，感觉可以使用迪杰斯特拉解题，还是超时，于是考虑迪杰斯特拉的优化，使用了优先队列进行解题，但是倒数第二个点始终WA。<br>最后换了一下排序算法（调了另一个），尝试提交居然过了，而且时间只有0.37秒，非常的神奇。<br>最近在复习数学，还要练日语英语的口语，还要做毕业设计，比较忙。等空下来之后我做几道优先队列的题，再回来尝试完成这道题目的优化。</p>]]></content>
      
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TOEIC-word</title>
      <link href="/2023/07/22/word%20and%20phrase/"/>
      <url>/2023/07/22/word%20and%20phrase/</url>
      
        <content type="html"><![CDATA[<h2 id="Reading"><a href="#Reading" class="headerlink" title="Reading"></a>Reading</h2><p>possible&#x2F;impossible 用于事件不能用于人<br>considerably<br>outskirts of<br>eligibility<br>unattended&#x2F;be left unattended<br>assertiveness<br>gratuitously<br>turn up&#x2F;down&#x2F;in&#x2F;on<br>abbreviate<br>deposit<br>deficit<br>depict<br>with regard to 关于<br>in case 以防万一<br>serve<br>cordially<br>be closely charged by<br>be charged with 被指控</p><p>assure<br>waive<br>diverse<br>diversified<br>notify<br>labored<br>sparing<br>well over<br>affirm<br>logistic<br>penalize<br>surrogate<br>suppress<br>intend 本身含有将来的含义，不用于将来时态<br>commensurate<br>as follows<br>cater to<br>look over one’s shoulder<br>dispensable<br>anonymousss</p><h2 id="Listening"><a href="#Listening" class="headerlink" title="Listening"></a>Listening</h2><p>be being p. p. 有人在做什么的时候才能用<br>fill in 代替</p>]]></content>
      
      
      
        <tags>
            
            <tag> ETS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>N2解题方法总结</title>
      <link href="/2023/06/30/N2-method/"/>
      <url>/2023/06/30/N2-method/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>五月考TOEIC的时候意外感染了新冠，然后躺了一周，之后又是各种大作业和期末考试准备，就稍微摸了一点。原本打算将言语知识等部分的错题都整理一下的，时间确实不允许，于是最后决定简单地写一份解题方法总结，应以对后天的能力考。</p><h3 id="はじめ"><a href="#はじめ" class="headerlink" title="はじめ"></a>はじめ</h3><h3 id="言语知识"><a href="#言语知识" class="headerlink" title="言语知识"></a>言语知识</h3><h4 id="1-汉字读音"><a href="#1-汉字读音" class="headerlink" title="1. 汉字读音"></a>1. 汉字读音</h4><p>没啥好说的，把握不准就猜音读。最后一题有时候会出不常见的读音，不确定的话可以赌一下。这里的错题主要有三种情况，一是真不知道：柔軟（じゅうなん）、強火（つよび），二是是长音短音：介護，最后是ち和じ。</p><h4 id="2-汉字写法"><a href="#2-汉字写法" class="headerlink" title="2. 汉字写法"></a>2. 汉字写法</h4><p>也没啥好说的，音读不会可以猜，训读就纯积累了。</p><h4 id="3-接头接尾词"><a href="#3-接头接尾词" class="headerlink" title="3. 接头接尾词"></a>3. 接头接尾词</h4><p>一般都是汉字，而且大部分可以用中文意思理解，和中文用法不一样的就只能靠积累了。假名不常见但也有，也没办法，只能靠积累。</p><h4 id="4-选词填空"><a href="#4-选词填空" class="headerlink" title="4. 选词填空"></a>4. 选词填空</h4><p>同3，积累词义，做题可用排除法，这题假名含量上升，还会把汉字故意写成假名。最后一题喜欢出副词和拟声词，ABAB和⚪っ⚪り，可以集中记忆。还喜欢出外来语，也可以集中记忆。</p><h4 id="5-近义词"><a href="#5-近义词" class="headerlink" title="5. 近义词"></a>5. 近义词</h4><p>这题也没什么好说的，排除法，或者用汉字猜，还是比较好理解的。</p><h4 id="6-正确用法"><a href="#6-正确用法" class="headerlink" title="6. 正确用法"></a>6. 正确用法</h4><p>这题开始变难了，也可以说是出现了更多日文漢字和中文不同的词义。如果想要很好地理解可能得查日日词典，但是一般来说多看看日语文章积累一下也够用。</p><h4 id="7-选择合适文法"><a href="#7-选择合适文法" class="headerlink" title="7. 选择合适文法"></a>7. 选择合适文法</h4><p>小时候最害怕的一题。大概有5种题型。</p><ol><li>助词。需要确认词与词的语法关系（格助词的用法）或者需要增加的意义（数量词+も）。</li><li>副词。副词一般考察呼应，首先确认副词的意义，再确认副词所需要呼应的表达。</li><li>助词&#x2F;惯用文型。确认接续+意义+使用场合。比如かねない必须跟在ます型之后。</li><li>复合形式。一般比较复杂，很大一坨。有时候是(2+2)x(2+2)也有四个选项四个用法。解法就是把复合形式拆成每个最基本的元素然后对应意义。这里还很喜欢出なる和する的辨析，而且往往还不是动词的辞书型，本质是<del>になる和</del>にする的用法。</li><li>敬语。一找动作的主体是自己还是他人，二看选项是自谦语还是尊他语，最后看谦敬正确的选项的原本意思。</li><li>授受动词。「あげる」「やる」「さしあげる」「もらう」「いただく」「くれる」「くださる」。弄懂三枝夕夏的飛び立ちない私にあなたが翼をくれた就懂了。</li></ol><h4 id="8-排序题"><a href="#8-排序题" class="headerlink" title="8. 排序题"></a>8. 排序题</h4><p>正统做法是这样的：</p><ol><li>分析四个选项的文节类型。</li><li>分析待填空部分和原语句连接处的文节类型。</li><li>根据配对六原则正确排序。</li><li>确认句子意义。<br>那么这个配对六原则是什么呢：</li><li>主语配谓语&#x2F;宾语配他动词</li><li>连体配名词</li><li>连用配动词和形容词</li><li>名词配助词&#x2F;数量词配动词&#x2F;呼应副词配对应的表达</li><li>惯用查接续</li><li>后置文末表达（完形填空第一题那个就是文末表达）<br>打了很多字，但是因为我没有系统地学习文法，所以我其实都是在拼凑意思，拼不下去了就靠文法去排除。比如た型可以表状态，后面接名词；或者说する+の&#x2F;こと将动词名词化，这样子可以将两个选项黏在一起，降低排序的复杂度。 感觉还是靠语感+格助词的提示+惯用。</li></ol><h4 id="9-完形填空"><a href="#9-完形填空" class="headerlink" title="9. 完形填空"></a>9. 完形填空</h4><p>有点阅读的解法的感觉，选项—原句—上下文，这么三步走。一般有几个考点：</p><ol><li>文末表达。积累，然后把做错的单独记忆。类型一般有判断&#x2F;委婉的肯定&#x2F;解释说明&#x2F;总结&#x2F;意见、主张&#x2F;愿望&#x2F;推测。</li><li>惯用文型。一般都会复合，根据上下文按语法选择题做就行了。</li><li>指示词。<br>こ：上下文离得比较远的词&#x2F;总结说明<br>そ：上文（近）的某个具体的词句<br>あ：不用于上下文解释<br>ど：必须与か和も呼应</li></ol><h3 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h3><h4 id="10-短阅读"><a href="#10-短阅读" class="headerlink" title="10. 短阅读"></a>10. 短阅读</h4><p>阅读其实没什么好写，全部都差不多。中国人的优势就是可以用汉字对应。</p><ol><li>读题干</li><li>读全文</li><li>从细节和逻辑比对选项和原文，有条件可以把错误选项错在哪点出来</li></ol><h4 id="11-中篇阅读"><a href="#11-中篇阅读" class="headerlink" title="11. 中篇阅读"></a>11. 中篇阅读</h4><ol><li>读题干找关键词。三种题型：细节、因果、主张。</li><li>读全文，定位每题的考点，看上下文，找因果关系和关键词。</li><li>从细节和逻辑比对选项和原文，有条件可以把错误选项错在哪点出来。</li></ol><h4 id="12-AB篇"><a href="#12-AB篇" class="headerlink" title="12. AB篇"></a>12. AB篇</h4><ol><li>读题目，确定该题的考察类型。带着题目的关键词来看文章。</li><li>用关键词定位文章的关键句。</li><li>对比选项，解题。</li></ol><h4 id="13-长篇阅读"><a href="#13-长篇阅读" class="headerlink" title="13. 长篇阅读"></a>13. 长篇阅读</h4><p>说是长篇阅读其实还没有小坂鱼的blog长，而且汉字多。</p><ol><li>读题干找关键词。三种题型：细节、因果、主张。</li><li>读全文，定位每题的考点，看上下文，找因果关系和选项的关键词。</li><li>从细节和逻辑比对选项和原文，有条件可以把错误选项错在哪点出来。<br>注意主旨题一般都是在开头或者结尾，而且往往都是在结尾。精读那几段作者的观点即可。</li></ol><h4 id="14-信息检索"><a href="#14-信息检索" class="headerlink" title="14. 信息检索"></a>14. 信息检索</h4><p>大概是最简单的题目了，分析题干的信息，再去文本里找对应的内容。小心遗漏。一般来说两道题目需要的信息是割裂的。</p><h3 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h3><p>最难的部分。</p><h4 id="15-之后要做的事"><a href="#15-之后要做的事" class="headerlink" title="15. 之后要做的事"></a>15. 之后要做的事</h4><p>这题很关键，尽量拿下。读选项，靠选项推测场景；听提问，谁之后要做什么。用选项定位文本。注意时间名词。四个选项都会提到，排除的手段是：某件事已经做过了&#x2F;某件事我会去做的&#x2F;某件事做了也没用。</p><h4 id="16-要点理解"><a href="#16-要点理解" class="headerlink" title="16. 要点理解"></a>16. 要点理解</h4><p>和15题差不多，读选项很重要。和之前的听力不一样，以前的听力都是告诉你哪个选项为什么对，这个听力反而是其他三个选项为什么错最重要。</p><h4 id="17-概要理解"><a href="#17-概要理解" class="headerlink" title="17. 概要理解"></a>17. 概要理解</h4><p>做得最差的一题。没有题面，听文本时因为单词不熟练往往反应不过来，要么文本听不懂要么选项听不懂。还是阅读那一套：关键词—关键句—具体实例，但是往往因为单词听不懂而做不来。这两天已经在加强练习了。两人对话还能通过人物转换来缓冲分析，独白就只能硬撑了，幸好不长。</p><h4 id="18-及时应答"><a href="#18-及时应答" class="headerlink" title="18. 及时应答"></a>18. 及时应答</h4><p>短期训练应该能出成效。邪道方法是用语气，还挺好用。</p><h4 id="19-综合理解"><a href="#19-综合理解" class="headerlink" title="19. 综合理解"></a>19. 综合理解</h4><p>第一题是三人对话，两个人讨论解决方法，第三个人（地位高）来决定。和16很像，都会自我否定的，难办的是因为没有选项，往往会听不到所有的解决方法。目前只能说是关注地位高的那个人，他第一次是开启讨论话题，后面都是在决策。<br>第二题是先给一个独白，再是两个人的讨论。这题简单一点，因为看得到选项，可以把四个选项对应的内容都听到。然后讨论内容和题目的对应一般都是按文本顺序的。<br>听力其实有个邪道。N2的听力特点是绕，四个选项往往都要给你过一遍，然后自己否定三个。所以开头结尾那两个往往不是正确答案，以及两个同时提到的、一起说明的也不是。</p><p>就这样吧，再听几篇听力。明天看看错题，再看一遍格助词和常考文法。希望这次考试能顺利！</p><p>康子啊，听了你这么多年歌了，保佑我2号N2能顺利吧。要是一切顺利，出分那天我就去买你那本『こんなに美しい月の夜を君は知らない』、お願いします！</p>]]></content>
      
      
      
        <tags>
            
            <tag> jlpt </tag>
            
            <tag> japan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红蓝宝书1000题N2难度的文法部分整理1</title>
      <link href="/2023/03/31/N2-1000-Grammer-1/"/>
      <url>/2023/03/31/N2-1000-Grammer-1/</url>
      
        <content type="html"><![CDATA[<h3 id="U1"><a href="#U1" class="headerlink" title="U1"></a>U1</h3><h4 id="～からといって-～からいって-～かといって"><a href="#～からといって-～からいって-～かといって" class="headerlink" title="～からといって ～からいって ～かといって"></a>～からといって ～からいって ～かといって</h4><p>忙しい<u>からといって</u>、睡眠をちゃんと取らないと体が持たないよ</p><ul><li>～からといって 不能因为…就…  表示转折</li><li>かといって 同样表示转折，但是<strong>接续</strong>上是小句+が、かといって 虽然…但也（不）… 承认前项，但也不能忽视与其相反内容的后项</li><li>名 + からいって 从…来看<br><br></br></li></ul><h4 id="～に関する-～にかかわる-～にとって"><a href="#～に関する-～にかかわる-～にとって" class="headerlink" title="～に関する　～にかかわる　～にとって"></a>～に関する　～にかかわる　～にとって</h4><p>この問題<u>に関する</u>、ご意見はありますか。</p><ul><li>～に関する　关于… 表示事物和行为所涉及的对象</li><li>～にかかわる　与……有关、涉及… 表示前后两项的关联</li><li>～にとって　对…来说</li><li>かかわる和かんする，一个是“关系到”，一个是“关于”<br>eg：「あんな事件にかかわって最悪だった」，说的是“之前卷入了那种案子，真是倒霉透顶”。这里的かかわる很明显不是“关于”的意思，而是“牵扯到”的意思。<br><br></br></li></ul><h4 id="～うちに-～ごとに-～折りに"><a href="#～うちに-～ごとに-～折りに" class="headerlink" title="～うちに　～ごとに　～折りに"></a>～うちに　～ごとに　～折りに</h4><p>雨が降らない<u>うちに</u>、お庭の掃除をしておこう。</p><ul><li>～うちに　在…期间、趁着… 前面接表示一段时间的内容</li><li>～ごとに　每… 表示每一次完整的事件反复出现<br>接续：V辞書 &#x2F; N + ごとに<br>「〜ごとに」は漢字にすると「〜毎に」となる<br>eg：私の会社では２年ごとにパソコンを新しいものに交換する<br><a href="https://jp.hjenglish.com/new/p395193/">https://jp.hjenglish.com/new/p395193/</a></li><li>～折りに　…的时候、…机会<br>V辞書&#x2F;Vた&#x2F;N+の + 折りに<br>「〜ときに」よりも丁寧な表現。<br><a href="https://nihongokyoshi-net.com/2019/06/05/jlptn2-grammar-orini/">https://nihongokyoshi-net.com/2019/06/05/jlptn2-grammar-orini/</a><br><br></br></li></ul><h4 id="～次第-～以降-～後で-～結果"><a href="#～次第-～以降-～後で-～結果" class="headerlink" title="～次第　～以降　～後で　～結果"></a>～次第　～以降　～後で　～結果</h4><p>その資料は読み終わり<u>次第</u>、受付に返してください。</p><ul><li>～次第　一…就…　表示前项刚一实现，马上就进行后项，后项<strong>不能用过去时</strong><br>接续：Vます+</li><li>～後で　…之后<br>接续：Vた &#x2F; N+の + </li><li>～以降　…之后<br>接续：N + </li><li>～結果　…结果…<br>接续：Vた &#x2F; N+の +<br><br></br></li></ul><h4 id="～として-～にして"><a href="#～として-～にして" class="headerlink" title="～として　～にして"></a>～として　～にして</h4><p>田中さんは選手を引退した後、監督としてサッカー界で活躍している。</p><ul><li>～として　作为…　表示某种身份、资格或立场等</li><li>～にして　1. 在…的时候　在某个时间段，表示时间、次数；2. 既是…又是…、…的同时，表并列<br>する变形成して，还是看前面的助词来确定大概意思</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> jlpt </tag>
            
            <tag> japan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JLPT-N2-NewJT-Inden</title>
      <link href="/2023/02/11/JLPT-N2-NewJT-Inden/"/>
      <url>/2023/02/11/JLPT-N2-NewJT-Inden/</url>
      
        <content type="html"><![CDATA[<blockquote><p>新た　新しい</p></blockquote><p>新しい：「イ形」，既可用于具体事物，也可用于抽象事物。表示之前没有的、刚刚出现的，着眼于距离-现在或者说话的时间不长。<br>新た:「ナ形」，用于抽象事物，多表现在原有基础上重新做或重新开始的意思。</p><p>eg：这是今年开张的新百货商店。<br>これは今年オープンした新しいデパートだ。√<br>これは今年オープンした新たなデパートだ。×</p><h6 id="百货商店是以前没有的，不是重新装修后再开张的。"><a href="#百货商店是以前没有的，不是重新装修后再开张的。" class="headerlink" title="百货商店是以前没有的，不是重新装修后再开张的。"></a>百货商店是以前没有的，不是重新装修后再开张的。</h6><blockquote><p>含める　含む</p></blockquote><p>含む：无意志性状态动词，表示一事物中含有某种成分，这时其实相当于一个自动词。<br>含める：表示包含，包括之意。这个包含，是一种带有意志性的包含，包括。<br>eg：<br>牛乳はカルシウムを多くふくんでいる。<br>出席者にはわたしも含めておいてください。 把我也算在参加的人数之内。</p><blockquote><p>～気味 ～げ ～っぽい</p></blockquote><p>「〜っぽい」有两个意思：<br><b>A. 〜のように感じる（感到……）；〜のように見える（看上去……）<br>接续：名词&#x2F;形容词词干</b><br>このテーブルは高いのに安っぽく見える。（这张桌子虽然很贵，但看起来却像便宜货。）<br>あの子はまだ中学生なのに、とても大人っぽい。（那个孩子虽然是初中生，但却很有大人样。）<br><b>B.〜しやすい（容易）；よく〜する（经常）<br>接续：动词ます形</b><br>最近忘れっぽくなったのは、年のせいだろう。（最近特别容易忘事，可能是年龄的关系吧。）</p><p>「〜気味」的意思：<br><b>少し〜の感じがある。（有点……；觉得稍微……）<br>接续：动词ます形&#x2F;名词</b><br>仕事が忙しくて、最近少し疲れ気味だ。（因为工作很忙，所以感觉又点累。）<br>昨日から風邪気味で、頭が痛い。（从昨天开始，感觉有点感冒，头很疼。）</p><p>「〜げ」的意思：<br><b>〜そう（好像）（見てその人の気持ちが感じられる様子を表す。表示此人的某种神情、样子、感觉等）<br>接续：形容词&#x2F;形容动词</b><br>彼女は悲しげな様子で話した。（她悲伤地说着话。）<br>彼は得意げな顔で、みんなに新しい家を見せた。（他得意地让大家参观了他的新家。）</p><p>安っぽい、大人っぽい、忘れっぽい</p><p>疲れ気味、風邪気味</p><p>悲しげ、得意げ</p><blockquote><p>料、代、費、金、賃</p></blockquote><p><a href="https://zhuanlan.zhihu.com/p/23549177">https://zhuanlan.zhihu.com/p/23549177</a></p><blockquote><p>がたい、にくい、づらい、かねる</p></blockquote><p><b>接续：</b><br>都是动词连用形+这些词<br><b>意思：</b><br>均表示做某事很困难。<br>1.「～にくい」的适用范围广，表示困难的原因在于事物的本身，也可接在意志动词的连用形后面，表示该行为遇到的困难，原因也在于事物的本身。<br>2.「～がたい」则表示不容易实现，做起来比较难的意思，多同于好的事情，偶尔也用于不好的事情<br>3.「～かねる」表示由于某种原因不能做某事，即使想做也不能那样做。常用于“婉言谢绝”或“不好意思”等场合<br><b>例子：</b><br>飲みにくい薬（指药本身很难吃）<br>飲みづらい薬（比如有口腔炎等，难以咽下）<br>飲みがたい薬（指难以弄到服用的药）<br>飲みかねる薬（比如药来历不明，很难接受把这个药吃下去）</p><blockquote><p>だらけ　まみれ</p></blockquote><p><a href="https://zhuanlan.zhihu.com/p/107942649">https://zhuanlan.zhihu.com/p/107942649</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> jlpt </tag>
            
            <tag> japan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新日检540题错题整理</title>
      <link href="/2023/02/11/JLPT-N2-NewJT-WA/"/>
      <url>/2023/02/11/JLPT-N2-NewJT-WA/</url>
      
        <content type="html"><![CDATA[<h1 id="語彙"><a href="#語彙" class="headerlink" title="語彙"></a>語彙</h1><h2 id="汉字读法"><a href="#汉字读法" class="headerlink" title="汉字读法"></a>汉字读法</h2><table><thead><tr><th align="center">漢字</th><th align="center">仮名</th><th align="center">读音</th><th align="center">中文</th></tr></thead><tbody><tr><td align="center">冷める</td><td align="center">さめる</td><td align="center">②</td><td align="center">自动，变冷</td></tr><tr><td align="center">新た</td><td align="center">あらた</td><td align="center">①</td><td align="center">新的，新しい辨析</td></tr><tr><td align="center">上達</td><td align="center">じょうたつ</td><td align="center">⓪</td><td align="center">进步</td></tr><tr><td align="center">控える</td><td align="center">ひかえる</td><td align="center">③②</td><td align="center">他动，控制，打消念头；自动，等候</td></tr><tr><td align="center">懐かしい</td><td align="center">なつかし</td><td align="center">④</td><td align="center">令人怀念的</td></tr><tr><td align="center">含める</td><td align="center">ふくめる</td><td align="center">③</td><td align="center">他动，包含，嘱咐</td></tr><tr><td align="center">莫大</td><td align="center">ばくだい</td><td align="center">⓪</td><td align="center">极大的</td></tr></tbody></table><h2 id="汉字书写"><a href="#汉字书写" class="headerlink" title="汉字书写"></a>汉字书写</h2><table><thead><tr><th align="center">漢字</th><th align="center">仮名</th><th align="center">读音</th><th align="center">中文</th></tr></thead><tbody><tr><td align="center">終日</td><td align="center">しゅうじつ</td><td align="center">⓪</td><td align="center">全天</td></tr></tbody></table><h2 id="词语构成"><a href="#词语构成" class="headerlink" title="词语构成"></a>词语构成</h2><table><thead><tr><th align="center">词语</th><th align="center">读音</th><th align="center">释义</th></tr></thead><tbody><tr><td align="center">見かける</td><td align="center">みかける</td><td align="center">看到~</td></tr><tr><td align="center">留守中</td><td align="center">るすちゅー</td><td align="center">不在家</td></tr><tr><td align="center">引き返す</td><td align="center">ひきかえす</td><td align="center">返回、往回走</td></tr><tr><td align="center">惹かれ合う</td><td align="center">ひかれあう</td><td align="center">互相被迷住</td></tr><tr><td align="center">受け取る</td><td align="center">う</td><td align="center">领取</td></tr><tr><td align="center">聞き手</td><td align="center">き</td><td align="center">听众</td></tr></tbody></table><h2 id="前后关系"><a href="#前后关系" class="headerlink" title="前后关系"></a>前后关系</h2><table><thead><tr><th align="center">词语</th><th align="center">原形</th><th align="center">解析</th></tr></thead><tbody><tr><td align="center">つり革をつかむ</td><td align="center">つかむ</td><td align="center">这个是他动词，自动词是つかまる</td></tr><tr><td align="center">おそらく遅刻してくる</td><td align="center">恐ろしい</td><td align="center">恐怕</td></tr><tr><td align="center">ずれていたら</td><td align="center">ずれ</td><td align="center">偏离</td></tr><tr><td align="center">変化が著しく</td><td align="center">著しい</td><td align="center">いちじる 明显</td></tr><tr><td align="center">せっせと働いて</td><td align="center">せっせと</td><td align="center">拼命</td></tr></tbody></table><ul><li>~以来<br><a href="https://jp.hjenglish.com/riyuyufa/p388211/">https://jp.hjenglish.com/riyuyufa/p388211/</a></li></ul><h2 id="近义替换"><a href="#近义替换" class="headerlink" title="近义替换"></a>近义替换</h2><table><thead><tr><th align="center">词语</th><th align="center">补充</th><th align="center">近义词</th><th align="center">补充</th></tr></thead><tbody><tr><td align="center">招く</td><td align="center">まね</td><td align="center">招待</td><td align="center">しょうたい</td></tr><tr><td align="center">お越しい</td><td align="center">行く、来ることの尊敬語</td><td align="center">来る</td><td align="center">きてください</td></tr><tr><td align="center">しょっちゅう</td><td align="center">经常，总是，老是</td><td align="center">何度でも</td><td align="center">经常</td></tr><tr><td align="center">まとめる</td><td align="center">整理</td><td align="center">せいりする</td><td align="center">整理する</td></tr><tr><td align="center">もよう</td><td align="center">模様</td><td align="center">柄</td><td align="center">がら 花纹</td></tr><tr><td align="center">思わず</td><td align="center">不自觉地</td><td align="center">無意識に</td><td align="center">主要是前者</td></tr><tr><td align="center">じきに</td><td align="center">马上</td><td align="center">そのうち</td><td align="center">立即</td></tr></tbody></table><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><ul><li>生徒会で、学生にふ<u>うさわしい</u>髪型について話し合った。<br>讨论了有关适合学生的发型</li><li>ちょっと風邪<u>気味</u>なので、今日は早く寝ます。<br>见相关辨析</li><li>今、手が<u>ふさがって</u>いるので、あとにしてくれませんか。<br>塞がる 自动 占用</li><li>奨学金の申し込みを<u>うっかり</u>忘れていた<br>不小心</li></ul><h2 id="语法形式的判断"><a href="#语法形式的判断" class="headerlink" title="语法形式的判断"></a>语法形式的判断</h2><ul><li><p>……からには&#x2F;からは<br><b>接续：</b><br>名詞とナ形容詞の辞書形＋である＋からには&#x2F;からは<br>イ形容詞と動詞の辞書形＋からには&#x2F;からは<br>各名詞の[た形]＋からには&#x2F;からは<br><b>意思：</b><br>和[～以上（は）&#x2F;うえは]的意思基本相同。主要用于“既然到了前项这种情况，当然想做或必须要做相应的后期”。不过在日常生活中，[～からには]比[～以上（は）&#x2F;うえは]的使用频率要高。[～からは]除了[こうなったからは]外，其他场合很少使用。<br><b>例子：</b><br>公務員であるからには、国民のために力を尽くすべきである。&#x2F;既然是国家公务员，就应该为人民尽心尽力。<br><b>注意：</b><br>前项根据情况可以是现在时也可是是过去式，但谓语句不能是过去时。就是说，后项不能是已经做完的事情。</p></li><li><p>……わけではない<br><b>接续：</b><br>动词、形容词辞書形+わけではない<br>形容动词+な+わけではない<br><b>意思：</b><br>并非会…。否定式「わけではない」表示“未必如此”，用来否定那些想当然的推测。（あることを部分的に否定している。）<br><b>例子：</b><br>友達にパーティに誘われて、行きたくないわけではないが、すぐに返事をしなかった。／朋友请我参加晚会，并不是不想去，却没有马上答复。</p></li><li><p>次第<br><a href="https://colanekojp.com.tw/blog_detail/51">https://colanekojp.com.tw/blog_detail/51</a></p></li><li><p>きって<br><b>接续：</b><br>名词＋きって<br><b>意思：</b><br>在…中最好的。<br><b>例子：</b><br>彼はクラスきっての成績を取った。／他取得了全班第一的成绩。</p></li></ul><h2 id="句子的组织"><a href="#句子的组织" class="headerlink" title="句子的组织"></a>句子的组织</h2><h2 id="文章语法"><a href="#文章语法" class="headerlink" title="文章语法"></a>文章语法</h2><ul><li>ことから　因为<br><a href="https://jp.hjenglish.com/new/p399601/">https://jp.hjenglish.com/new/p399601/</a></li><li>さらには　不仅如此<br><a href="https://www.hujiang.com/jpciku/je38195e38289e381ab/">https://www.hujiang.com/jpciku/je38195e38289e381ab/</a></li><li>そもそも  本来<br><a href="https://www.hujiang.com/jpciku/je3819de38282e3819de38282/">https://www.hujiang.com/jpciku/je3819de38282e3819de38282/</a></li><li>わけではない  不是为了~来<br><a href="https://www.hujiang.com/jpciku/je3828fe38191e381a7e381afe381aae38184/">https://www.hujiang.com/jpciku/je3828fe38191e381a7e381afe381aae38184/</a></li><li>一方だ　越来越<br><a href="https://jp.hjenglish.com/new/p516628/">https://jp.hjenglish.com/new/p516628/</a></li><li>がたい　难以</li><li><a href="https://www.hujiang.com/jpciku/je3818ce3819fe38184/">https://www.hujiang.com/jpciku/je3818ce3819fe38184/</a></li><li>ついて　关于<br><a href="https://www.hujiang.com/jpciku/je381a4e38184e381a6/">https://www.hujiang.com/jpciku/je381a4e38184e381a6/</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> jlpt </tag>
            
            <tag> japan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022.12.04 n2考试练习全真模拟第1回（已取消）</title>
      <link href="/2022/11/28/JLPT-N2-M1/"/>
      <url>/2022/11/28/JLPT-N2-M1/</url>
      
        <content type="html"><![CDATA[<h1 id="语言知识"><a href="#语言知识" class="headerlink" title="语言知识"></a>语言知识</h1><h2 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h2><h3 id="训读和特殊读音"><a href="#训读和特殊读音" class="headerlink" title="训读和特殊读音"></a>训读和特殊读音</h3><table><thead><tr><th align="center">漢字</th><th align="center">仮名</th><th align="center">中文</th></tr></thead><tbody><tr><td align="center">鳴らす</td><td align="center">ならす</td><td align="center">鸣响；出名，驰名</td></tr><tr><td align="center">照らす</td><td align="center">てらす</td><td align="center">照耀，对照</td></tr><tr><td align="center">減らす</td><td align="center">へらす</td><td align="center">减少，削减</td></tr><tr><td align="center">吠える</td><td align="center">ほえる</td><td align="center">吠叫</td></tr><tr><td align="center">支える</td><td align="center">ささえる</td><td align="center">支撑，支持</td></tr><tr><td align="center">垣根</td><td align="center">かきね</td><td align="center">地名</td></tr></tbody></table><h3 id="看假名选汉字"><a href="#看假名选汉字" class="headerlink" title="看假名选汉字"></a>看假名选汉字</h3><table><thead><tr><th align="center">仮名</th><th align="center">漢字</th><th align="center">中文</th></tr></thead><tbody><tr><td align="center">しょうち</td><td align="center">承知</td><td align="center">知道；同意</td></tr></tbody></table><h3 id="词义辨析"><a href="#词义辨析" class="headerlink" title="词义辨析"></a>词义辨析</h3><blockquote><p>飛ぶ出す　飛び去る</p></blockquote><table><thead><tr><th align="center">原文</th><th align="center">释义</th><th align="center">例句</th></tr></thead><tbody><tr><td align="center">飛び出す</td><td align="center">飞奔，跑出去</td><td align="center">eg：穴から兎が飛ぶ出す</td></tr><tr><td align="center">飛び去る</td><td align="center">飞离，飞走</td><td align="center">eg：飛行機は南へ飛び去る</td></tr></tbody></table><blockquote><p>取り消す　取り替える　取り上げる</p></blockquote><table><thead><tr><th align="center">原文</th><th align="center">释义</th></tr></thead><tbody><tr><td align="center">取り消す</td><td align="center">取消废除</td></tr><tr><td align="center">取り替える</td><td align="center">交换更换</td></tr></tbody></table><blockquote><p>コピー</p></blockquote><p>量词使用<strong>部</strong></p><blockquote><p>相関　関係　連携　連結</p></blockquote><table><thead><tr><th align="center">原文</th><th align="center">释义</th><th align="center">例句</th></tr></thead><tbody><tr><td align="center">相関</td><td align="center">相关，密切关联</td><td align="center">eg：年齢と運動能力が相関している</td></tr><tr><td align="center">関係</td><td align="center">相关，密切关联</td><td align="center">eg：年齢と運動能力が相関している</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> jlpt </tag>
            
            <tag> japan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计组2复习笔记1：流水线</title>
      <link href="/2022/11/21/CO2-Re-Ch1/"/>
      <url>/2022/11/21/CO2-Re-Ch1/</url>
      
        <content type="html"><![CDATA[<h1 id="流水线"><a href="#流水线" class="headerlink" title="流水线"></a>流水线</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>将一重复的处理过程分解为若干子过程，每个子过程都可有效地在其专用功能段上与其它子过程同时执行，这种技术称为流水线技术。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ol><li>流水过程由多个相关的<strong>子过程</strong>组成，这些子过程称为流水线的<strong>级或段</strong>。段的数目称为流水线的<strong>深度</strong>。</li><li>每个子过程由专用的功能段实现，各功能段的时间应<strong>基本相等</strong>，通常为1个时钟周期（1拍）。</li><li>流水线的稳定需要一定的<strong>通过时间</strong>。</li><li>流水线适合大量重复的时序过程。</li></ol><h3 id="时空图"><a href="#时空图" class="headerlink" title="时空图"></a>时空图</h3><p>从时间和空间两个方面描述流水线的工作过程，横坐标表示时间，纵坐标表示各流水段。</p><h2 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h2><h3 id="吞吐率TP"><a href="#吞吐率TP" class="headerlink" title="吞吐率TP"></a>吞吐率TP</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>设流水线<strong>由m段组成</strong>，<strong>完成n个任务</strong>的吞吐率称为实际吞吐率，记作TP，单位：MIPS。<br>吞吐率是指单位时间内流水线所完成的任务数或输出结果的数量。$TP &#x3D; \frac{n}{T_{流水}}$<br>同时设各段消耗的时间为$\Delta t_i$，若各段时间相等则设为$\Delta t_0$。<br>那么TP的推导如下：<br>$$T_{流水} &#x3D; \sum_{i&#x3D;1}^{m}{\Delta t_i} + (n-1)\Delta t_j$$<br>$$TP &#x3D; \frac{n}{T_{流水}} &#x3D; \frac{n}{\sum\limits_{i&#x3D;1}^{m}{\Delta t_i} + (n-1)\Delta t_j}$$<br>$$T_{流水} &#x3D; m\Delta t_0 + (n-1)\Delta t_0$$<br>$$TP &#x3D; \frac{n}{T_{流水}} &#x3D; \frac{1}{(1+\frac{m-1}{n})\Delta t_0}$$<br><img src="/../images/CO2-Re-Ch1-1.png" alt="各时段相等的流水线时空图"></p><h4 id="最大吞吐率-TP-max"><a href="#最大吞吐率-TP-max" class="headerlink" title="最大吞吐率 $TP_{max}$"></a>最大吞吐率 $TP_{max}$</h4><p>是指流水线在达到稳定状态后所得到的吞吐率。<br>$$ TP_{max} &#x3D; \frac{1}{max{\Delta t_i}}$$<br>那么，若流水线各段的时间相等<br>$$ TP_{max} &#x3D; \frac{1}{\Delta t_0}$$<br>$$TP &#x3D; \frac{n}{T_{流水}} &#x3D; \frac{TP_{max}}{1+\frac{m-1}{n}}$$<br>显然 $TP &lt; TP_{max}$，而且当$n &gt;&gt; m$时，$TP\approx TP_{max}$<br>同时不难发现最大吞吐率取决于流水线中最慢一段所需的时间，该段成为流水线的瓶颈。<br>解决办法包括</p><ul><li>细分瓶颈段<ul><li>把耗时长的段拆成基本段的长度，即把这段的任务分成n份，让n个部件先后执行每份任务。<br><img src="/../images/CO2-Re-Ch1-3.png" alt="图解"></li></ul></li><li>重复设置瓶颈段<ul><li>瓶颈段耗时是基本段的n倍，就安排n个部件同时执行整个任务，第i+kn份进入的任务让第i个部件执行，直到第一个部件执行完第一个任务开始下一次循环。<br><img src="/../images/CO2-Re-Ch1-4.png" alt="图解"><br>核心就是减少其他部件的等待时间，让流水线顺利运作。反映在时空图上就是更加的紧密。</li></ul></li></ul><h3 id="加速比S"><a href="#加速比S" class="headerlink" title="加速比S"></a>加速比S</h3><h4 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h4><p>加速比是指流水线速度与等功能的非流水线速度之比。$S &#x3D; \frac{T_{非流水}}{T_{流水}}$<br>在各段时间相等的流水线中$$S &#x3D; \frac{T_{非流水}}{T_{流水}} &#x3D; \frac{nm\Delta t_0}{m\Delta t_0 + (n-1)\Delta t_0} &#x3D; \frac{m}{1 + \frac{m - 1}{n}}$$<br>显然 $n &gt;&gt; m$ 时，$S\approx m$<br>对于各段时间不相等的流水线<br>$$S &#x3D; \frac{T_{非流水}}{T_{流水}} &#x3D; \frac{n\sum\limits_{i &#x3D; 1}^{m}\Delta t_i}{\sum\limits_{i &#x3D; 1}^{m}\Delta t_i + (n - 1)\Delta t_{max}}$$</p><h3 id="效率E"><a href="#效率E" class="headerlink" title="效率E"></a>效率E</h3><h4 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h4><p>效率指流水线的设备利用率。<br>由于流水线有通过时间和排空时间，所以流水线的各段并非一直满负荷工作，E&lt;1。<br>当每段时间相等时，显然各段的效率都相等。<br>$$E &#x3D; \frac{n\Delta t}{T_{流水}} &#x3D; \frac{n}{m + n - 1} &#x3D; \frac{1}{1 + \frac{m - 1}{n}} $$<br>反映时空图上，则如下：<br><img src="/../images/CO2-Re-Ch1-2.png" alt="效率的时空图"><br>可视化的角度下，效率就是n个任务所占的时空区与m段的总个时空区面积之比，由此则可以计算各段时间不相等的流水线的效率。</p><h4 id="三者关系"><a href="#三者关系" class="headerlink" title="三者关系"></a>三者关系</h4><p>$E &#x3D; \frac{mn\Delta t_0}{T_{流水}} \times \frac{1}{m} &#x3D; \frac{S}{m}$ $~~~~$效率是实际加速比S与最大加速比m之比</p><p>$E &#x3D; \frac{n}{T_{流水}} \times \Delta t_0 &#x3D; TP\Delta t_0$ $~~~~$当$\Delta t_0$不变时，流水线的效率与吞吐率呈正比</p><p>由上两式可堆得：$TP &#x3D; \frac{S}{m\Delta t_0}$ $~~~~$即当m和$\Delta t_0$不变时，流水线的加速比与吞吐率呈正比。</p><h4 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h4><ol><li>流水线并不能减少（而且一般是增加）单条指令的执行时间，但能够提高吞吐率。</li><li>增加流水线的深度可以提高流水线性能。</li><li>流水线深度受限于流水线的延迟和额外开销。</li><li>需要用高速锁存器作为流水线寄存器。</li></ol><h2 id="影响因素——相关"><a href="#影响因素——相关" class="headerlink" title="影响因素——相关"></a>影响因素——相关</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>流水线中的<strong>相关</strong>是指相邻或相近的两条指令因存在某种关联，后一条指令不能在原先指定的时钟周期开始执行。<br>消除相关的基本方法是<strong>暂停</strong>，即暂停流水线中某条指令及其后面所有指令的执行，该指令之前的所有指令继续执行。</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="结构相关"><a href="#结构相关" class="headerlink" title="结构相关"></a>结构相关</h4><h4 id="数据相关"><a href="#数据相关" class="headerlink" title="数据相关"></a>数据相关</h4><h4 id="控制相关"><a href="#控制相关" class="headerlink" title="控制相关"></a>控制相关</h4><h2 id="分类和常见技术"><a href="#分类和常见技术" class="headerlink" title="分类和常见技术"></a>分类和常见技术</h2><h3 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h3><ol><li>按所完成的功能分类<ul><li>单功能流水线，是指只能完成一种固定功能的流水线。</li><li>多功能流水线，是指各段可以进行不同的连接，从而完成不同的功能。</li></ul></li><li>按同一时间内流水段的连接方式划分<ul><li>静态流水线，是指在同一时间内，流水线的各段只能按同一种功能的连接方式工作。</li><li>动态流水线，是指在同一时间内，当某些段正在实现某种运算时，另一些段却在实现另一种运算。</li></ul></li><li>按流水的级别划分(由小到大)<ul><li>部件级流水线，又叫运算操作流水线，是把处理机的算术逻辑部件分段，使得各种数据类型的操作能够进行流水。</li><li>处理机级流水线，又叫指令流水线，是把解释指令的过程按照流水方式处理。</li><li>处理机间流水线，又叫宏流水线，是由两个以上的处理机串行地对同一数据流进行处理，每个处理机完成一项任务。</li></ul></li><li>按照是否有反馈回路来进行分类<ul><li>线性流水线是指流水线的各段串行连接，没有反馈回路。</li><li>非线性流水线是指流水线中除有串行连接的通路外，还有反馈回路。</li></ul></li><li>按照输出端任务流出顺序与输入端任务流入顺序是否相同划分<ul><li>顺序流动流水线是指流水线输出端任务流出的顺序 与输入端任务流入的顺序相同。</li><li>乱序流动流水线也可称为无序流水线、错序流水线， 是指流水线输出端任务流出的顺序与输入端任务流 入的顺序不一定相同。</li></ul></li></ol><h2 id="经典例题（XDU特供版）"><a href="#经典例题（XDU特供版）" class="headerlink" title="经典例题（XDU特供版）"></a>经典例题（XDU特供版）</h2><ol><li>假设在<u>DLX</u>的非流水实现和基本流水线中，5个功能单元的时间为：10，8，10，10，7（ns），  流水额外开销为：1ns，求加速比S。</li><li>在静态流水线上计算$\sum A_{i}B_{i}$，其中乘法使用部件1，6，7，8；加法使用部件1，2，3，4，5.求：吞吐率，加速比和效率。</li></ol><h2 id="汇编小记"><a href="#汇编小记" class="headerlink" title="汇编小记"></a>汇编小记</h2><ol><li>寻址不能同时寻两个址<br> mov ax,[bx]<br> mov es:[di],ax $~~~~~~~~$ mov es:[di],[bx] (x)</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 计组 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
